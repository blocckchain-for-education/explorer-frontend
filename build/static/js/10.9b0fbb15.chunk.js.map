{"version":3,"sources":["agent.js","config/config.js","assets/nodes.svg","assets/app.svg","assets/cubes.svg","assets/transaction.svg","views/Search/Search.js","views/Info/Info.js","views/Blocks/BlocksRealtime.js","views/Transactions/TransactionsRealtime.js","views/Chart/BarChart.js","views/Chart/PieChart.js","views/Dashboard/Dashboard.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","ROOT_URL","config","ES_URL","APIKEY","responseBody","res","body","requests","url","get","then","requestES","ES","getAllDocs","Sawtooth","getBlock","id","getBlocks","limit","getAllBlocks","getAllBlocksReal","a","allBlocks","previous_block_id","data","length","header","genesis_block_id","blocks","concat","getTransaction","getTransactions","getAllTransactions","getAllTransactionsReal","transactions","element","batches","batch","getPeers","requestApp","set","AppInfo","getInfo","process","REACT_APP_NODE_ENV","module","exports","SAWTOOTH_NODE","devMode","websocket_url","Search","props","search","bind","toggleDropdown","changeValue","inputValue","state","block","transaction","dropdownValue","dropdownOpen","message","e","this","setState","target","value","agent","to","header_signature","Card","CardBody","InputGroup","InputGroupButtonDropdown","addonType","isOpen","toggle","DropdownToggle","caret","color","DropdownMenu","DropdownItem","onClick","Input","placeholder","name","type","onChange","InputGroupAddon","Button","className","aria-hidden","Component","Info","loading","Row","Col","sm","md","size","Spinner","style","width","height","peers","txFamily","self","setInterval","getTxFamily","xs","lg","Table","borderless","rowSpan","src","nodes","alt","cubes","parseInt","block_num","app","BlocksRealtime","map","key","substring","TransactionRealtime","slice","PieChart","textAlign","offset","groupByFamily","_","groupBy","labels","k","push","barData","datasets","label","backgroundColor","borderWidth","borderColor","options","responsive","maintainAspectRatio","dataset","barPercentage","scales","xAxes","gridLines","display","yAxes","ticks","beginAtZero","pieData","hoverBackgroundColor","Dashboard","BarChart","fontSize","CardHeader","CardFooter","outline","TransactionsRealtime"],"mappings":"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","file":"static/js/10.9b0fbb15.chunk.js","sourcesContent":["import superagentPromise from \"superagent-promise\";\r\nimport _superagent from \"superagent\";\r\nimport config from \"./config/config\";\r\nimport { element } from \"prop-types\";\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst ROOT_URL = config.ROOT_URL;\r\nconst ES_URL = config.ES_URL;\r\nconst APIKEY = config.APIKEY;\r\n\r\n\r\nconst responseBody = res => {\r\n  return res.body;\r\n};\r\n\r\nconst requests = {\r\n  del: url => superagent.del(`${ROOT_URL}${url}`).then(responseBody),\r\n  get: url => superagent.get(`${ROOT_URL}${url}`).then(responseBody),\r\n  put: (url, body) =>\r\n    superagent.put(`${ROOT_URL}${url}`, body).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent\r\n      .post(`${ROOT_URL}${url}`, body)\r\n      .set(\"authorization\", sessionStorage.getItem(\"authorization\"))\r\n      .then(responseBody)\r\n};\r\n\r\n\r\n// const requestsIP = {\r\n//   get: url => superagent.get(`${url}`).then(responseBody),\r\n// };\r\n\r\nconst requestES = {\r\n  get: url => superagent.get(`${ES_URL}${url}`).then(responseBody)\r\n\r\n};\r\nconst ES = {\r\n  getAllDocs: () => requestES.get(\"/_stats\"),\r\n}\r\n\r\nconst Sawtooth = {\r\n  getBlock: id => requests.get(\"/blocks/\" + id),\r\n  getBlocks: limit => requests.get(\"/blocks?limit=\" + limit),\r\n  getAllBlocks: limit => requests.get(\"/blocks\"),\r\n  getAllBlocksReal: async (limit) => {\r\n    let allBlocks = await requests.get(\"/blocks\")\r\n    let previous_block_id = allBlocks.data[allBlocks.data.length - 1].header.previous_block_id\r\n    let genesis_block_id = \"0000000000000000\"\r\n\r\n    while (previous_block_id != genesis_block_id) {\r\n      let blocks = await requests.get(\"/blocks?head=\" + previous_block_id)\r\n      \r\n      allBlocks.data = allBlocks.data.concat(blocks.data)\r\n      previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    }\r\n   \r\n    return allBlocks\r\n  },\r\n\r\n  getTransaction: id => requests.get(\"/transactions/\" + id),\r\n  getTransactions: limit => requests.get(\"/transactions?limit=\" + limit),\r\n  getAllTransactions: limit => requests.get(\"/transactions\"),\r\n  getAllTransactionsReal: async (limit) => {\r\n\r\n    let transactions = {}\r\n    transactions.data = []\r\n\r\n    let blocks = await requests.get(\"/blocks\")\r\n    for (let element of blocks.data) {\r\n      let batches = element['batches']\r\n      for (let batch of batches) {\r\n        transactions.data = transactions.data.concat(batch.transactions)\r\n      }\r\n    }\r\n    \r\n    let previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    let genesis_block_id = \"0000000000000000\"\r\n    while (previous_block_id != genesis_block_id) {\r\n      let blocks = await requests.get(\"/blocks?head=\" + previous_block_id)\r\n      for (let element of blocks.data) {\r\n        let batches = element['batches']\r\n        for (let batch of batches) {\r\n          transactions.data = transactions.data.concat(batch.transactions)\r\n        }\r\n      }\r\n      previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    }\r\n   \r\n    return transactions\r\n  },\r\n\r\n  getPeers: limit => requests.get(\"/peers\")\r\n};\r\n\r\nconst requestApp = {\r\n  get: url => superagent\r\n    .get(url)\r\n    .set(\"Authorization\", APIKEY)\r\n    .then(responseBody)\r\n}\r\n\r\nconst AppInfo = {\r\n  getInfo: url => requestApp.get(\"https://v-chain.vn/appservice/v1/apps\")\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  Sawtooth,\r\n  ES,\r\n  AppInfo\r\n};\r\n","if (process.env.REACT_APP_NODE_ENV === \"production\") {\r\n  module.exports = {\r\n    ROOT_URL: \"http://localhost:2398/http://localhost:8008\",\r\n    SAWTOOTH_NODE: \"localhost:4004\",\r\n    ES_URL: \"localhost:9200\",\r\n    devMode: true,\r\n    websocket_url: \"ws:localhost:8008/subscriptions\",\r\n  };\r\n} else {\r\n  module.exports = {\r\n    ROOT_URL: \"http://localhost:2398/http://localhost:8008\",\r\n    devMode: false,\r\n    websocket_url: \"ws:localhost:8008/subscriptions\",\r\n    ES_URL: \"http://localhost:9200\",\r\n    APIKEY:\r\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImRpbnRlIiwiZW1haWwiOiJkaW50ZUBnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImFjdGl2ZSI6dHJ1ZSwiYmFsYW5jZSI6MCwicmVmZXJyYWxfY29kZSI6bnVsbCwicGxhbiI6eyJwbGFuX3R5cGUiOiJwcm8iLCJkdWVfZGF0ZSI6MH0sIm5hbWUiOiJkaW50ZSIsInBob25lIjoiMDEyMzQ1Njc4OSIsImJpcnRoZGF5IjoiMDEvMDEvMTk3MCIsInVzZXJfaWQiOiI1ZjY4N2YwYjAzZTcyOWE0OWRhYjE5NTciLCJleHAiOjE2MzQ2MzUyNTZ9.68eFaiIGZJ3eBt9UvI7mn0is9jtjwJ4kXyvJL5qsJxQ\",\r\n  };\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/nodes.f5f2ba39.svg\";","module.exports = __webpack_public_path__ + \"static/media/app.cde4721e.svg\";","module.exports = __webpack_public_path__ + \"static/media/cubes.2535de38.svg\";","module.exports = __webpack_public_path__ + \"static/media/transaction.d6cfb01c.svg\";","import React, { Component} from \"react\";\r\nimport { Card } from \"reactstrap\";\r\nimport agent from \"../../agent\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupButtonDropdown,\r\n  Input,\r\n  Button,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  CardBody\r\n} from \"reactstrap\";\r\n\r\nclass Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n\r\n        this.search =  this.search.bind(this);\r\n        this.toggleDropdown = this.toggleDropdown.bind(this);\r\n        this.changeValue = this.changeValue.bind(this);\r\n        this.inputValue = this.inputValue.bind(this);\r\n\r\n        this.state = {\r\n            id: null,\r\n            block: null,\r\n            transaction: null,\r\n            dropdownValue: null,\r\n            dropdownOpen: false,\r\n            message: null\r\n        }\r\n    }\r\n\r\n    toggleDropdown(e) {\r\n        this.setState({\r\n            dropdownOpen: !this.state.dropdownOpen\r\n        })\r\n    }\r\n\r\n    changeValue(e) {\r\n        this.setState({\r\n          dropdownValue: e.target.value\r\n        })\r\n    }\r\n\r\n    search(e) {\r\n        switch(this.state.dropdownValue) {\r\n          case('Block'):\r\n            this.getBlock(this.state.id);\r\n            break;\r\n          case('Transaction'):\r\n            this.getTransaction(this.state.id);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n    }\r\n\r\n    inputValue(e) {\r\n        this.setState({\r\n            id: e.target.value\r\n        })\r\n    }\r\n\r\n    async getBlock(id) {\r\n        try {\r\n            let block = await agent.Sawtooth.getBlock(id);\r\n            if (block) {\r\n                this.setState({\r\n                    block: block.data\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    message: \"Block Not Found! Please check the ID\"\r\n                })\r\n            }\r\n        }\r\n         catch (error) {\r\n            this.setState({\r\n                message: \"Block Not Found! Please check the ID\"\r\n            })\r\n        }\r\n    }\r\n\r\n    async getTransaction(id) {\r\n        try {\r\n            let transaction = await agent.Sawtooth.getTransaction(id);\r\n            if (transaction) {\r\n                this.setState({\r\n                    transaction: transaction.data\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    message: \"Transaction Not Found! Please check the ID\"\r\n                })\r\n            }\r\n        } catch (error) {\r\n            this.setState({\r\n                message: \"Transaction Not Found! Please check the ID\"\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(this.state.block) {\r\n            return <Redirect to={\"/blocks/\" + this.state.block.header_signature}/>\r\n        }\r\n\r\n        if(this.state.transaction) {\r\n            return <Redirect to={\"/transactions/\" + this.state.transaction.header_signature}/>\r\n        }\r\n\r\n        return <Card>\r\n            <CardBody>\r\n                <InputGroup>\r\n                    <InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\r\n                        <DropdownToggle caret color=\"light\">\r\n                            {this.state.dropdownValue != null ? this.state.dropdownValue : \"Select\" } \r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                            <DropdownItem value=\"Block\" onClick={this.changeValue}>Block</DropdownItem>\r\n                            <DropdownItem value=\"Transaction\" onClick={this.changeValue}>Transaction</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </InputGroupButtonDropdown>\r\n                    <Input placeholder=\"Search by Block / Transaction\" name=\"id\" type=\"text\" onChange={this.inputValue}/>\r\n                    <InputGroupAddon addonType=\"append\">\r\n                        <Button color=\"primary\" onClick={this.search}>\r\n                            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        </Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n                <br/>\r\n                <span className=\"text-danger\">{this.state.message ? this.state.message : null}</span>\r\n            </CardBody>\r\n            \r\n        </Card>\r\n    }\r\n}\r\n\r\nexport default Search","import React, { Component } from \"react\";\r\nimport agent from \"../../agent\";\r\nimport { Card, CardBody, Spinner, Table, Row, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport nodes from \"../../assets/nodes.svg\";\r\nimport app from \"../../assets/app.svg\";\r\nimport cubes from \"../../assets/cubes.svg\";\r\nimport transaction from \"../../assets/transaction.svg\";\r\n\r\nclass Info extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            peers: null,\r\n            transactions: null,\r\n            blocks: null,\r\n            txFamily: null\r\n        };\r\n    }\r\n\r\n    loading = () =>\r\n    (\r\n        <Row>\r\n            <Col sm=\"12\" md={{ size: 6 }}>\r\n                <Spinner\r\n                    color=\"primary\"\r\n                    style={{ width: \"25px\", height: \"25px\" }}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n    async getAllBlocks() {\r\n        let blocks = await agent.Sawtooth.getAllBlocks();\r\n        this.setState({\r\n            blocks: blocks.data\r\n        })\r\n    }\r\n\r\n    async getAllTransactions() {\r\n        let transactions = await agent.Sawtooth.getAllTransactionsReal();\r\n        this.setState({\r\n            transactions: transactions.data\r\n        })\r\n    }\r\n\r\n    async getPeers() {\r\n        let peers = await agent.Sawtooth.getPeers();\r\n        this.setState({\r\n            peers: peers.data\r\n        })\r\n    }\r\n\r\n    async getTxFamily() {\r\n        // let txFamily = await agent.AppInfo.getInfo();\r\n        // this.setState({\r\n        //     txFamily: txFamily.data\r\n        // })\r\n        this.setState({\r\n            txFamily: { length: 1 }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this;\r\n        setInterval(() => {\r\n            self.getPeers();\r\n            self.getAllBlocks();\r\n            self.getAllTransactions();\r\n            self.getTxFamily();\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Row>\r\n                <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n                    <Card>\r\n                        <CardBody className=\"pb-0\">\r\n                            <Table borderless size=\"sm\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td rowSpan=\"2\">\r\n                                            <img src={nodes} width=\"50px\" alt=\"nodes\" />\r\n                                        </td>\r\n                                        <td><h5 className=\"text-muted\">Total nodes</h5></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {this.state.peers ? (\r\n                                                <h5 className=\"text-primary animated fadeIn\">\r\n                                                    {this.state.peers.length + 1 + \" nodes\"}\r\n                                                </h5>\r\n                                            ) : (\r\n                                                    this.loading()\r\n                                                )}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n                    <Card>\r\n                        <CardBody className=\"pb-0\">\r\n                            <Table borderless size=\"sm\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td rowSpan=\"2\">\r\n                                            <img src={transaction} width=\"50px\" alt=\"transactions\" />\r\n                                        </td>\r\n                                        <td><Link to=\"/transactions\" className=\"text-muted\"><h5>Total transactions</h5></Link></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {this.state.transactions ? (\r\n                                                <h5 className=\"text-primary animated fadeIn\">\r\n                                                    {this.state.transactions.length + \" transactions\"}\r\n                                                </h5>\r\n                                            ) : (\r\n                                                    this.loading()\r\n                                                )}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n                    <Card>\r\n                        <CardBody className=\"pb-0\">\r\n                            <Table borderless size=\"sm\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td rowSpan=\"2\">\r\n                                            <img src={cubes} width=\"50px\" alt=\"blocks\" />\r\n                                        </td>\r\n                                        <td><Link to=\"/blocks\" className=\"text-muted\"><h5>Total blocks</h5></Link></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {this.state.blocks ? (\r\n                                                <h5 className=\"text-primary animated fadeIn\">\r\n                                                    {parseInt(this.state.blocks[0].header.block_num) + 1 + \" blocks\"}\r\n                                                </h5>\r\n                                            ) : (\r\n                                                    this.loading()\r\n                                                )}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n\r\n                <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n                    <Card>\r\n                        <CardBody className=\"pb-0\">\r\n                            <Table borderless size=\"sm\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td rowSpan=\"2\">\r\n                                            <img src={app} width=\"50px\" alt=\"transaction_family\" />\r\n                                        </td>\r\n                                        <td><h5 className=\"text-muted\">Total transactions family</h5></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            {this.state.txFamily ? (\r\n                                                <h5 className=\"text-primary animated fadeIn\">\r\n                                                    {this.state.txFamily.length + \" transaction family\"}\r\n                                                </h5>\r\n                                            ) : (\r\n                                                    this.loading()\r\n                                                )}\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Info;","import React, { Component} from \"react\";\r\nimport agent from \"../../agent\";\r\nimport { Table, Row, Col, Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass BlocksRealtime extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            blocks: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this;\r\n        setInterval(function() {\r\n            self.getBlocks(10);\r\n        }, 2000);\r\n    };\r\n\r\n    loading = () => \r\n        (\r\n        <Row>\r\n            <Col sm=\"12\" md={{ size: 6}}>\r\n            <Spinner\r\n                color=\"primary\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n            />\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n    async getBlocks() {\r\n        let blocks = await agent.Sawtooth.getBlocks(10);\r\n        if (blocks) {\r\n          this.setState({\r\n            blocks: blocks.data\r\n          });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.state.blocks) {\r\n            return this.loading()\r\n        }\r\n\r\n        return <div className=\"animated fadeIn\">\r\n            <Table borderless>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Height</th>\r\n                            <th>Block ID</th>\r\n                            <th>Previous Block ID</th>\r\n                            <th>Signer Public Key</th>\r\n                        </tr>\r\n                        {this.state.blocks.map((block) => {\r\n                            return (\r\n                                <tr key={block['header_signature']}>\r\n                                    <td className=\"text-muted\">{\"#\" + block['header']['block_num']}</td>\r\n                                    <td><Link to={\"/blocks/\" + block['header_signature']}>{block['header_signature'].substring(0,15) + \"...\"}</Link></td>\r\n                                    <td><Link to={\"/blocks/\" + block['header']['previous_block_id']}>{block['header']['previous_block_id'].substring(0,15) + \"...\"}</Link></td>\r\n                                    <td>{block['header']['signer_public_key'].substring(0,15) + \"...\"}</td>\r\n                                </tr> \r\n                            )\r\n                        })}\r\n                </tbody>\r\n            </Table>\r\n        </div> \r\n        \r\n    }\r\n}\r\n\r\nexport default BlocksRealtime;","import React, { Component} from \"react\";\r\nimport agent from \"../../agent\";\r\nimport { Col, Row, Table, Spinner } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass TransactionRealtime extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            transactions: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let self = this;\r\n        setInterval(function() {\r\n            self.getTransactions(10);\r\n        }, 2000);\r\n    };\r\n\r\n    loading = () => \r\n        (\r\n        <Row>\r\n            <Col sm=\"12\" md={{ size: 6}}>\r\n            <Spinner\r\n                color=\"primary\"\r\n                style={{ width: \"100px\", height: \"100px\" }}\r\n            />\r\n            </Col>\r\n        </Row>\r\n    );\r\n\r\n    async getTransactions() {\r\n        let transactions = await agent.Sawtooth.getTransactions(10);\r\n        this.setState({\r\n            transactions: transactions.data\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if(!this.state.transactions) {\r\n            return this.loading()\r\n        }\r\n\r\n\r\n        return <div className=\"animated fadeIn\">\r\n            <Table borderless>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Transaction ID</th>\r\n                        <th>Transaction Family</th>\r\n                        <th>Version</th>\r\n                        <th>Payload</th>\r\n                    </tr>\r\n\r\n                    {this.state.transactions.map((transaction) => {\r\n                            return (\r\n                                <tr key={transaction['header_signature']}>\r\n                                    <td><Link to={\"/transactions/\" + transaction['header_signature']}>{transaction['header_signature'].slice(0,15) + '...'}</Link></td>\r\n                                    <td>{transaction['header']['family_name']}</td>\r\n                                    <td>{transaction['header']['family_version']}</td>\r\n                                    <td>{transaction['payload'].slice(0,20) + '...'}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default TransactionRealtime;","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport {Card, Spinner,Row,Col, CardBody } from 'reactstrap';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst PieChart = props => {\r\n    let transactions = props.transactions;\r\n    if(!transactions) {\r\n      return (\r\n        <Card>\r\n            <CardBody>\r\n                <Row style={{textAlign:\"center\"}}>\r\n                    <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                        <Spinner color=\"primary\" style={{width:\"100px\",height:\"100px\"}}/>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n      )\r\n    }\r\n\r\n    let groupByFamily = _.groupBy(transactions,\"header.family_name\");\r\n    let labels = [];\r\n    let data = [];\r\n    for ( var k in groupByFamily ) {\r\n      labels.push(k);\r\n      data.push(groupByFamily[k].length)\r\n    } \r\n  \r\n    let barData =  {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: \"Total transactions\",\r\n          data: data,\r\n          backgroundColor: [\r\n              \"rgba(255, 134,159,0.4)\",\r\n              \"rgba(98,  182, 239,0.4)\",\r\n              \"rgba(255, 218, 128,0.4)\",\r\n              \"rgba(113, 205, 205,0.4)\",\r\n              \"rgba(170, 128, 252,0.4)\",\r\n              \"rgba(255, 177, 101,0.4)\"\r\n          ],\r\n          borderWidth: 2,\r\n          borderColor: [\r\n              \"rgba(255, 134, 159, 1)\",\r\n              \"rgba(98,  182, 239, 1)\",\r\n              \"rgba(255, 218, 128, 1)\",\r\n              \"rgba(113, 205, 205, 1)\",\r\n              \"rgba(170, 128, 252, 1)\",\r\n              \"rgba(255, 177, 101, 1)\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n\r\n        let barChartOptions = {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            dataset: {\r\n              barPercentage: 1\r\n            },\r\n            scales: {\r\n                xAxes: [\r\n                {\r\n                    gridLines: {\r\n                      display: true,\r\n                      color: \"rgba(0, 0, 0, 0.1)\"\r\n                    }\r\n                }\r\n                ],\r\n                yAxes: [\r\n                {\r\n                    gridLines: {\r\n                      display: true,\r\n                      color: \"rgba(0, 0, 0, 0.1)\"\r\n                    },\r\n                    ticks: {\r\n                      beginAtZero: true\r\n                    }\r\n                }\r\n                ]\r\n            }\r\n        }\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Card>\r\n          <CardBody>\r\n            <div className=\"chart-wrapper\"  >\r\n              <Bar height={100} data={barData} options={barChartOptions} />\r\n            </div>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\nexport default PieChart;\r\n  ","import React from \"react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\nimport { Spinner,Row,Col, CardBody, Card } from 'reactstrap';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst PieChart = props => {\r\n  let transactions = props.transactions;\r\n  if(!transactions) {\r\n    return (\r\n      <Card>\r\n          <CardBody>\r\n            <Row style={{textAlign:\"center\"}}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Spinner color=\"primary\" style={{width:\"100px\",height:\"100px\"}}/>\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n      </Card>\r\n    )\r\n  }\r\n  let groupByFamily = _.groupBy(transactions,\"header.family_name\");\r\n  let labels = [];\r\n  let data = [];\r\n  for ( var k in groupByFamily ) {\r\n    labels.push(k);\r\n    data.push(groupByFamily[k].length)\r\n  } \r\n\r\n  let pieData = {\r\n    labels:labels,\r\n    datasets:[\r\n      {\r\n        data:data,\r\n        backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\", \"#AC64AD\"],\r\n        hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\", \"#FFC870\", \"#A8B3C5\", \"#616774\", \"#DA92DB\"]\r\n      }\r\n    ]\r\n  }\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Card>\r\n        <CardBody>\r\n          <div className=\"chart-wrapper\"  >\r\n            <Pie height={100} data={pieData} />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default PieChart;\r\n\r\n","import React, { Component} from \"react\";\r\nimport { Col, Row, Card, CardHeader, CardBody, CardFooter, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Search from \"../Search/Search\";\r\nimport Info from \"../Info/Info\";\r\nimport BlocksRealtime from \"../Blocks/BlocksRealtime\";\r\nimport TransactionsRealtime from \"../Transactions/TransactionsRealtime\";\r\nimport BarChart from \"../Chart/BarChart\";\r\nimport PieChart from \"../Chart/PieChart\";\r\nimport agent from \"../../agent\";\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            transactions: null\r\n        };\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let self = this;\r\n        setInterval(function() {\r\n            self.getTransactions(10);\r\n        }, 2000);\r\n    };\r\n\r\n    async getTransactions() {\r\n        let transactions = await agent.Sawtooth.getAllTransactionsReal();\r\n        this.setState({\r\n            transactions: transactions.data\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"animated fadeIn\">\r\n                {/* Search */}\r\n                <Row>\r\n                    <Col sm=\"12\" md={{ size: 8, offset: 2}}>\r\n                        <Search />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Infomation */}\r\n                <Row>\r\n                    <Col>\r\n                        <Info />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {/* Chart */}\r\n                <Row>\r\n                    <Col style={{height: \"250px\"}}>\r\n                        <PieChart transactions={this.state.transactions}/>\r\n                    </Col>\r\n                    <Col style={{height: \"250px\"}}>\r\n                        <BarChart transactions={this.state.transactions}/>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                {/* Table Blocks and Transaction */}\r\n                <Row style={{ fontSize: \"13px\" }} xs=\"2\">\r\n                    <Col>\r\n                        <Card style={{height: \"680px\"}}>\r\n                            <CardHeader><strong>Realtime Blocks</strong></CardHeader>\r\n                            <CardBody>\r\n                                <BlocksRealtime />\r\n                            </CardBody>\r\n                            <CardFooter>\r\n                                <Link to=\"/blocks\">\r\n                                    <Button outline block color=\"primary\" size=\"lg\">\r\n                                        View all Blocks\r\n                                    </Button>\r\n                                </Link>\r\n                            </CardFooter>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card style={{height: \"680px\"}}>\r\n                            <CardHeader><strong>Realtime Transactions</strong></CardHeader>\r\n                            <CardBody>\r\n                                <TransactionsRealtime />\r\n                            </CardBody>\r\n                            <CardFooter>\r\n                                <Link to=\"/transactions\">\r\n                                    <Button outline block color=\"primary\" size=\"lg\">\r\n                                        View all Transactions\r\n                                    </Button>\r\n                                </Link>\r\n                            </CardFooter>\r\n                        </Card>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}