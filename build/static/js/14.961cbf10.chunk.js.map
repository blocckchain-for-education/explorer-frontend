{"version":3,"sources":["agent.js","config/config.js","views/Transactions/Transaction.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","ROOT_URL","config","ES_URL","APIKEY","responseBody","res","body","requests","url","get","then","requestES","ES","getAllDocs","Sawtooth","getBlock","id","getBlocks","limit","getAllBlocks","getAllBlocksReal","a","allBlocks","previous_block_id","data","length","header","genesis_block_id","blocks","concat","getTransaction","getTransactions","getAllTransactions","getAllTransactionsReal","transactions","element","batches","batch","getPeers","requestApp","set","AppInfo","getInfo","process","REACT_APP_NODE_ENV","module","exports","SAWTOOTH_NODE","devMode","websocket_url","Transaction","props","state","transaction","this","agent","match","params","setState","className","style","lg","responsive","striped","hover","key","header_signature","family_name","family_version","signer_public_key","nonce","payload_sha512","inputs","map","input","Math","random","outputs","output","payload","window","atob","textAlign","sm","md","size","offset","color","width","height","Component"],"mappings":"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","file":"static/js/14.961cbf10.chunk.js","sourcesContent":["import superagentPromise from \"superagent-promise\";\r\nimport _superagent from \"superagent\";\r\nimport config from \"./config/config\";\r\nimport { element } from \"prop-types\";\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst ROOT_URL = config.ROOT_URL;\r\nconst ES_URL = config.ES_URL;\r\nconst APIKEY = config.APIKEY;\r\n\r\n\r\nconst responseBody = res => {\r\n  return res.body;\r\n};\r\n\r\nconst requests = {\r\n  del: url => superagent.del(`${ROOT_URL}${url}`).then(responseBody),\r\n  get: url => superagent.get(`${ROOT_URL}${url}`).then(responseBody),\r\n  put: (url, body) =>\r\n    superagent.put(`${ROOT_URL}${url}`, body).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent\r\n      .post(`${ROOT_URL}${url}`, body)\r\n      .set(\"authorization\", sessionStorage.getItem(\"authorization\"))\r\n      .then(responseBody)\r\n};\r\n\r\n\r\n// const requestsIP = {\r\n//   get: url => superagent.get(`${url}`).then(responseBody),\r\n// };\r\n\r\nconst requestES = {\r\n  get: url => superagent.get(`${ES_URL}${url}`).then(responseBody)\r\n\r\n};\r\nconst ES = {\r\n  getAllDocs: () => requestES.get(\"/_stats\"),\r\n}\r\n\r\nconst Sawtooth = {\r\n  getBlock: id => requests.get(\"/blocks/\" + id),\r\n  getBlocks: limit => requests.get(\"/blocks?limit=\" + limit),\r\n  getAllBlocks: limit => requests.get(\"/blocks\"),\r\n  getAllBlocksReal: async (limit) => {\r\n    let allBlocks = await requests.get(\"/blocks\")\r\n    let previous_block_id = allBlocks.data[allBlocks.data.length - 1].header.previous_block_id\r\n    let genesis_block_id = \"0000000000000000\"\r\n\r\n    while (previous_block_id != genesis_block_id) {\r\n      let blocks = await requests.get(\"/blocks?head=\" + previous_block_id)\r\n      \r\n      allBlocks.data = allBlocks.data.concat(blocks.data)\r\n      previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    }\r\n   \r\n    return allBlocks\r\n  },\r\n\r\n  getTransaction: id => requests.get(\"/transactions/\" + id),\r\n  getTransactions: limit => requests.get(\"/transactions?limit=\" + limit),\r\n  getAllTransactions: limit => requests.get(\"/transactions\"),\r\n  getAllTransactionsReal: async (limit) => {\r\n\r\n    let transactions = {}\r\n    transactions.data = []\r\n\r\n    let blocks = await requests.get(\"/blocks\")\r\n    for (let element of blocks.data) {\r\n      let batches = element['batches']\r\n      for (let batch of batches) {\r\n        transactions.data = transactions.data.concat(batch.transactions)\r\n      }\r\n    }\r\n    \r\n    let previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    let genesis_block_id = \"0000000000000000\"\r\n    while (previous_block_id != genesis_block_id) {\r\n      let blocks = await requests.get(\"/blocks?head=\" + previous_block_id)\r\n      for (let element of blocks.data) {\r\n        let batches = element['batches']\r\n        for (let batch of batches) {\r\n          transactions.data = transactions.data.concat(batch.transactions)\r\n        }\r\n      }\r\n      previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    }\r\n   \r\n    return transactions\r\n  },\r\n\r\n  getPeers: limit => requests.get(\"/peers\")\r\n};\r\n\r\nconst requestApp = {\r\n  get: url => superagent\r\n    .get(url)\r\n    .set(\"Authorization\", APIKEY)\r\n    .then(responseBody)\r\n}\r\n\r\nconst AppInfo = {\r\n  getInfo: url => requestApp.get(\"https://v-chain.vn/appservice/v1/apps\")\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  Sawtooth,\r\n  ES,\r\n  AppInfo\r\n};\r\n","if (process.env.REACT_APP_NODE_ENV === \"production\") {\r\n  module.exports = {\r\n    ROOT_URL: \"http://localhost:2398/http://localhost:8008\",\r\n    SAWTOOTH_NODE: \"localhost:4004\",\r\n    ES_URL: \"localhost:9200\",\r\n    devMode: true,\r\n    websocket_url: \"ws:localhost:8008/subscriptions\",\r\n  };\r\n} else {\r\n  module.exports = {\r\n    ROOT_URL: \"http://localhost:2398/http://localhost:8008\",\r\n    devMode: false,\r\n    websocket_url: \"ws:localhost:8008/subscriptions\",\r\n    ES_URL: \"http://localhost:9200\",\r\n    APIKEY:\r\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImRpbnRlIiwiZW1haWwiOiJkaW50ZUBnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImFjdGl2ZSI6dHJ1ZSwiYmFsYW5jZSI6MCwicmVmZXJyYWxfY29kZSI6bnVsbCwicGxhbiI6eyJwbGFuX3R5cGUiOiJwcm8iLCJkdWVfZGF0ZSI6MH0sIm5hbWUiOiJkaW50ZSIsInBob25lIjoiMDEyMzQ1Njc4OSIsImJpcnRoZGF5IjoiMDEvMDEvMTk3MCIsInVzZXJfaWQiOiI1ZjY4N2YwYjAzZTcyOWE0OWRhYjE5NTciLCJleHAiOjE2MzQ2MzUyNTZ9.68eFaiIGZJ3eBt9UvI7mn0is9jtjwJ4kXyvJL5qsJxQ\",\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Spinner, Card, CardBody, CardHeader, Col, Row, Table } from \"reactstrap\";\r\nimport agent from \"../../agent\";\r\n\r\nclass Transaction extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transaction: null\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getTransaction();\r\n    \r\n  }\r\n  async getTransaction() {\r\n    let transaction = await agent.Sawtooth.getTransaction(\r\n      this.props.match.params.id\r\n    );\r\n    this.setState({\r\n      transaction: transaction.data\r\n    });\r\n  }\r\n  render() {\r\n    \r\n    let transaction = this.state.transaction;\r\n    if (!this.state.transaction) {\r\n      return (\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <Spinner\r\n              color=\"primary\"\r\n              style={{ width: \"50px\", height: \"50px\" }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\" style={{\"fontSize\":\"14px\"}}>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader>\r\n                <i className=\"icon-info pr-1\"></i>Transaction ID:{\" \"}\r\n                <strong>\r\n                  {this.props.match.params.id}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive striped hover>\r\n                  <tbody>\r\n                    <tr key={transaction.header_signature}>\r\n                      <td>Transaction ID</td>\r\n                      <td>\r\n                        <strong>{transaction.header_signature}</strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr key={transaction.header.family_name}>\r\n                      <td>Transaction Family</td>\r\n                      <td>\r\n                        <strong>{transaction.header.family_name}</strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr key={transaction.header.family_version}>\r\n                      <td>Transaction Family Version</td>\r\n                      <td>\r\n                        <strong>{transaction.header.family_version}</strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr key={transaction.header.signer_public_key}>\r\n                      <td>Signer Public Key</td>\r\n                      <td>\r\n                        <strong>{transaction.header.signer_public_key}</strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr key={transaction.header.nonce}>\r\n                      <td>Nonce</td>\r\n                      <td>\r\n                        <strong>{transaction.header.nonce}</strong>\r\n                      </td>\r\n                    </tr>\r\n                    <tr key={transaction.header.payload_sha512}>\r\n                      <td>Payload</td>\r\n                      <td>\r\n                        <strong>{transaction.header.payload_sha512}</strong>\r\n                      </td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"fa fa-sign-in\"></i>{\"  \"}Input:{\" \"}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive hover>\r\n                  <tbody>\r\n                   {transaction.header.inputs.map(input=>{\r\n                     return(\r\n                      <tr key={Math.random()}>\r\n                      <td>\r\n                        <strong>{input}</strong>\r\n                      </td>\r\n                    </tr>\r\n                     )\r\n                   })}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"fa fa-sign-out\"></i>{\"  \"}Output:{\" \"}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Table responsive  hover>\r\n                  <tbody>\r\n                  {transaction.header.outputs.map(output=>{\r\n                     return(\r\n                      <tr key={output}>\r\n                      <td>\r\n                        <strong>{output}</strong>\r\n                      </td>\r\n                    </tr>\r\n                     )\r\n                   })}\r\n                  </tbody>\r\n                </Table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"fa fa-newspaper-o\"></i>{\"  \"}Payload:{\" \"}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                 {(transaction.payload)}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n         </Row>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"fa fa-newspaper-o\"></i>{\"  \"}Payload decoded:{\" \"}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                 { window.atob(transaction.payload)}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n         </Row>\r\n\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transaction;\r\n"],"sourceRoot":""}