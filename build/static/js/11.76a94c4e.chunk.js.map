{"version":3,"sources":["agent.js","config/config.js","views/Blocks/AllBlocks.js"],"names":["superagent","superagentPromise","_superagent","global","Promise","ROOT_URL","config","ES_URL","APIKEY","responseBody","res","body","requests","url","get","then","requestES","ES","getAllDocs","Sawtooth","getBlock","id","getBlocks","limit","getAllBlocks","getAllBlocksReal","a","allBlocks","previous_block_id","data","length","header","genesis_block_id","blocks","concat","getTransaction","getTransactions","getAllTransactions","getAllTransactionsReal","transactions","element","batches","batch","getPeers","requestApp","set","AppInfo","getInfo","process","REACT_APP_NODE_ENV","module","exports","SAWTOOTH_NODE","devMode","websocket_url","BlockRow","props","block","bkLink","header_signature","className","block_num","to","substring","consensus","signer_public_key","AllBlocks","state","this","agent","setState","blocksData","responsive","hover","scope","map","index","key","style","textAlign","sm","md","size","offset","color","width","height","Component"],"mappings":"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","file":"static/js/11.76a94c4e.chunk.js","sourcesContent":["import superagentPromise from \"superagent-promise\";\r\nimport _superagent from \"superagent\";\r\nimport config from \"./config/config\";\r\nimport { element } from \"prop-types\";\r\nconst superagent = superagentPromise(_superagent, global.Promise);\r\n\r\nconst ROOT_URL = config.ROOT_URL;\r\nconst ES_URL = config.ES_URL;\r\nconst APIKEY = config.APIKEY;\r\n\r\n\r\nconst responseBody = res => {\r\n  return res.body;\r\n};\r\n\r\nconst requests = {\r\n  del: url => superagent.del(`${ROOT_URL}${url}`).then(responseBody),\r\n  get: url => superagent.get(`${ROOT_URL}${url}`).then(responseBody),\r\n  put: (url, body) =>\r\n    superagent.put(`${ROOT_URL}${url}`, body).then(responseBody),\r\n  post: (url, body) =>\r\n    superagent\r\n      .post(`${ROOT_URL}${url}`, body)\r\n      .set(\"authorization\", sessionStorage.getItem(\"authorization\"))\r\n      .then(responseBody)\r\n};\r\n\r\n\r\n// const requestsIP = {\r\n//   get: url => superagent.get(`${url}`).then(responseBody),\r\n// };\r\n\r\nconst requestES = {\r\n  get: url => superagent.get(`${ES_URL}${url}`).then(responseBody)\r\n\r\n};\r\nconst ES = {\r\n  getAllDocs: () => requestES.get(\"/_stats\"),\r\n}\r\n\r\nconst Sawtooth = {\r\n  getBlock: id => requests.get(\"/blocks/\" + id),\r\n  getBlocks: limit => requests.get(\"/blocks?limit=\" + limit),\r\n  getAllBlocks: limit => requests.get(\"/blocks\"),\r\n  getAllBlocksReal: async (limit) => {\r\n    let allBlocks = await requests.get(\"/blocks\")\r\n    let previous_block_id = allBlocks.data[allBlocks.data.length - 1].header.previous_block_id\r\n    let genesis_block_id = \"0000000000000000\"\r\n\r\n    while (previous_block_id != genesis_block_id) {\r\n      let blocks = await requests.get(\"/blocks?head=\" + previous_block_id)\r\n      \r\n      allBlocks.data = allBlocks.data.concat(blocks.data)\r\n      previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    }\r\n   \r\n    return allBlocks\r\n  },\r\n\r\n  getTransaction: id => requests.get(\"/transactions/\" + id),\r\n  getTransactions: limit => requests.get(\"/transactions?limit=\" + limit),\r\n  getAllTransactions: limit => requests.get(\"/transactions\"),\r\n  getAllTransactionsReal: async (limit) => {\r\n\r\n    let transactions = {}\r\n    transactions.data = []\r\n\r\n    let blocks = await requests.get(\"/blocks\")\r\n    for (let element of blocks.data) {\r\n      let batches = element['batches']\r\n      for (let batch of batches) {\r\n        transactions.data = transactions.data.concat(batch.transactions)\r\n      }\r\n    }\r\n    \r\n    let previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    let genesis_block_id = \"0000000000000000\"\r\n    while (previous_block_id != genesis_block_id) {\r\n      let blocks = await requests.get(\"/blocks?head=\" + previous_block_id)\r\n      for (let element of blocks.data) {\r\n        let batches = element['batches']\r\n        for (let batch of batches) {\r\n          transactions.data = transactions.data.concat(batch.transactions)\r\n        }\r\n      }\r\n      previous_block_id = blocks.data[blocks.data.length - 1].header.previous_block_id\r\n    }\r\n   \r\n    return transactions\r\n  },\r\n\r\n  getPeers: limit => requests.get(\"/peers\")\r\n};\r\n\r\nconst requestApp = {\r\n  get: url => superagent\r\n    .get(url)\r\n    .set(\"Authorization\", APIKEY)\r\n    .then(responseBody)\r\n}\r\n\r\nconst AppInfo = {\r\n  getInfo: url => requestApp.get(\"https://v-chain.vn/appservice/v1/apps\")\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  Sawtooth,\r\n  ES,\r\n  AppInfo\r\n};\r\n","if (process.env.REACT_APP_NODE_ENV === \"production\") {\r\n  module.exports = {\r\n    ROOT_URL: \"http://localhost:2398/http://localhost:8008\",\r\n    SAWTOOTH_NODE: \"localhost:4004\",\r\n    ES_URL: \"localhost:9200\",\r\n    devMode: true,\r\n    websocket_url: \"ws:localhost:8008/subscriptions\",\r\n  };\r\n} else {\r\n  module.exports = {\r\n    ROOT_URL: \"http://localhost:2398/http://localhost:8008\",\r\n    devMode: false,\r\n    websocket_url: \"ws:localhost:8008/subscriptions\",\r\n    ES_URL: \"http://localhost:9200\",\r\n    APIKEY:\r\n      \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImRpbnRlIiwiZW1haWwiOiJkaW50ZUBnbWFpbC5jb20iLCJyb2xlIjoidXNlciIsImFjdGl2ZSI6dHJ1ZSwiYmFsYW5jZSI6MCwicmVmZXJyYWxfY29kZSI6bnVsbCwicGxhbiI6eyJwbGFuX3R5cGUiOiJwcm8iLCJkdWVfZGF0ZSI6MH0sIm5hbWUiOiJkaW50ZSIsInBob25lIjoiMDEyMzQ1Njc4OSIsImJpcnRoZGF5IjoiMDEvMDEvMTk3MCIsInVzZXJfaWQiOiI1ZjY4N2YwYjAzZTcyOWE0OWRhYjE5NTciLCJleHAiOjE2MzQ2MzUyNTZ9.68eFaiIGZJ3eBt9UvI7mn0is9jtjwJ4kXyvJL5qsJxQ\",\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport agent from \"../../agent\";\r\nimport { Row, Col, Spinner, Card, CardHeader, CardBody, Table} from \"reactstrap\";\r\n\r\n\r\n\r\nfunction BlockRow(props) {\r\n    const block = props.block;\r\n    const bkLink = `/blocks/${block.header_signature}`;\r\n  \r\n    return (\r\n        <tr>\r\n            <td>\r\n                <div className=\"text-muted\">{\"#\" + block.header.block_num}</div>\r\n            </td>\r\n            <td>\r\n                <Link to={bkLink}>\r\n                    {block.header_signature.substring(0, 15) + \"...\"}\r\n                </Link>\r\n            </td>\r\n            <td>\r\n                {block.header.previous_block_id !== \"0000000000000000\" ? (\r\n                    <Link to={\"/blocks/\" + block.header.previous_block_id}>\r\n                        {block.header.previous_block_id.substring(0,15) + \"...\"}\r\n                    </Link>\r\n                ) : (\r\n                    block.header.previous_block_id.substring(0,15) + \"...\"\r\n                )}\r\n                \r\n            </td>\r\n            <td>\r\n                {block.header.consensus}\r\n            </td>\r\n            <td>\r\n                {block.header.signer_public_key}\r\n            </td>\r\n        </tr>\r\n    //   <tr key={block.header_signature.toString()}>\r\n    //     <th scope=\"row\">\r\n    //       <Link to={bkLink}>\r\n    //         {block.header_signature.substring(0, 15)}...\r\n    //       </Link>\r\n    //     </th>\r\n    //     <td>\r\n    //       <Link to={bkLink}>{block.header.family_name}</Link>\r\n    //     </td>\r\n    //     <td>{block.header.family_version}</td>\r\n    //     <td>{block.header.signer_public_key.substring(0, 15)}...</td>\r\n    //     <td>{block.payload.substring(0, 75)}...</td>\r\n    //   </tr>\r\n    );\r\n}\r\n\r\nclass AllBlocks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            blocks: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.getAllBlocks();\r\n      }\r\n      async getAllBlocks() {\r\n        let blocks = await agent.Sawtooth.getAllBlocksReal();\r\n        this.setState({\r\n          blocks: blocks.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let blocksData = this.state.blocks;\r\n    if (!blocksData) {\r\n      return (\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <Spinner\r\n              color=\"primary\"\r\n              style={{ width: \"50px\", height: \"50px\" }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Card>\r\n          <CardHeader>\r\n            All Blocks\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Table responsive hover>\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Height</th>\r\n                  <th scope=\"col\">Block ID</th>\r\n                  <th scope=\"col\">Previous Block ID</th>\r\n                  <th scope=\"col\">Consensus</th>\r\n                  <th scope=\"col\">Signer Public Key</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {blocksData.map((block, index) => (\r\n                  <BlockRow key={index} block={block} />\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n        </Card> \r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AllBlocks;"],"sourceRoot":""}